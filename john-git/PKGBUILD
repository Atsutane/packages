# Maintainer: Thorsten TÃ¶pper <atsutane-tu@freethoughts.de>
pkgname=john-git
pkgver=20120707
pkgrel=1
pkgdesc="A fast password cracker (using the git repository of the jumbo patch)"
arch=('i686' 'x86_64')
url="http://www.openwall.com/$pkgname/"
license=('GPL2' 'custom')
depends=('openssl')
provides=('john')
conflicts=('john')
makedepends=('git')
optdepends=("perl: for executing some of the scripts at /usr/share/john"
            "ruby: for executing some of the scripts at /usr/share/john"
            "python: for executing some of the scripts at /usr/share/john")
backup=('etc/john/john.conf')
install=john.install
source=(params.h.patch)
options=('!strip')
md5sums=('f69ed632eba8fb9e45847a4b4a323787')

_gitroot="https://github.com/magnumripper/magnum-jumbo.git"
_gitname="magnum-jumbo"

build() {
  cd "$srcdir"
  msg "Connecting to GIT server...."

  if [[ -d "$_gitname" ]]; then
    cd "$_gitname" && git pull origin
    msg "The local files are updated."
  else
    git clone "$_gitroot" "$_gitname"
  fi

  msg "GIT checkout done or server timeout"
  msg "Starting build..."

  rm -rf "$srcdir/$_gitname-build"
  git clone "$srcdir/$_gitname" "$srcdir/$_gitname-build"
  cd "$srcdir/$_gitname-build/src"
	
  patch -p0 < ${srcdir}/params.h.patch
	if [ "$CARCH" == "x86_64" ]; then
	    sed -i 's|CFLAGS = -c -Wall -O2|CFLAGS = -c -Wall -O2 -march=x86-64 -DJOHN_SYSTEMWIDE=1|' Makefile
	    sed -i 's|^LDFLAGS =\(.*\)|LDFLAGS =\1 -lm|' Makefile
	    sed -i -e 's|-m486||g' Makefile
	  else sed -i 's|CFLAGS = -c -Wall -O2|CFLAGS = -c -Wall -O2 -march=i686 -DJOHN_SYSTEMWIDE=1|' Makefile
	fi
	
	# enable OMP
	sed -i 's|#OMPFLAGS = -fopenmp$|OMPFLAGS = -fopenmp|' Makefile

	# build john
	if [ "$CARCH" == "x86_64" ]; then
	    make linux-x86-64
	  else make linux-x86-mmx
	fi
}

package() {
	# config file
	sed -i 's|$JOHN/john.local.conf|/etc/john/john.local.conf|g' ${srcdir}/$_gitname-build/run/john.conf
	sed -i 's|$JOHN|/usr/share/john|g' ${srcdir}/$_gitname-build/run/john.conf
	install -Dm644 ${srcdir}/$_gitname-build/run/john.conf ${pkgdir}/etc/john/john.conf

	# docs
	install -d ${pkgdir}/usr/share/doc/john
	install -m644 ${srcdir}/$_gitname-build/doc/* ${pkgdir}/usr/share/doc/john/
	install -Dm644 ${srcdir}/$_gitname-build/doc/LICENSE ${pkgdir}/usr/share/licenses/$pkgname/LICENSE

	# install password list, charset files
	install -d ${pkgdir}/usr/share/john/
	install -m644 ${srcdir}/$_gitname-build/run/password.lst ${pkgdir}/usr/share/john/
	install -m644 ${srcdir}/$_gitname-build/run/dictionary.rfc2865 ${pkgdir}/usr/share/john/
	install -m644 ${srcdir}/$_gitname-build/run/stats ${pkgdir}/usr/share/john/
	install -m644 ${srcdir}/$_gitname-build/run/{all,alnum,alpha,digits,lanman}.chr \
 			${pkgdir}/usr/share/john/
	install -m644 ${srcdir}/$_gitname-build/run/{dumb16,dumb32,dynamic}.conf \
			${pkgdir}/usr/share/john/

	# install scripts
	john_scripts=(benchmark-unify \
		cracf2john.py \
		genincstats.rb \
		ldif2john.pl \
		lion2john-alt.pl \
		lion2john.pl \
		netntlm.pl \
		netscreen.py \
		odf2john.py \
		pass_gen.pl \
		radius2john.pl \
		sap2john.pl \
		sha-dump.pl \
		sha-test.pl \
		sipdump2john.py)
	for john_script in "${john_scripts[@]}"; do
		install -m755 ${srcdir}/$_gitname-build/run/${john_script} \
			${pkgdir}/usr/share/john
	done

	install -m644 ${srcdir}/$_gitname-build/run/dynamic.conf ${pkgdir}/etc/john/
	install -Dm644 ${srcdir}/$_gitname-build/run/john.bash_completion \
		${pkgdir}/etc/bash_completion.d/john

	# install binaries
	install -Dm755 ${srcdir}/$_gitname-build/run/john ${pkgdir}/usr/bin/john
	install -Dm755 ${srcdir}/$_gitname-build/run/calc_stat ${pkgdir}/usr/bin/calc_stat
	install -Dm755 ${srcdir}/$_gitname-build/run/genmkvpwd ${pkgdir}/usr/bin/genmkvpwd
	install -Dm755 ${srcdir}/$_gitname-build/run/mkvcalcproba ${pkgdir}/usr/bin/mkvcalcproba
	install -Dm755 ${srcdir}/$_gitname-build/run/relbench ${pkgdir}/usr/bin/relbench
	install -Dm755 ${srcdir}/$_gitname-build/run/tgtsnarf ${pkgdir}/usr/bin/tgtsnarf
	install -Dm755 ${srcdir}/$_gitname-build/run/mailer ${pkgdir}/usr/bin/john-mailer
	install -Dm755 ${srcdir}/$_gitname-build/run/raw2dyna ${pkgdir}/usr/bin/raw2dyna

	# create links
	cd ${pkgdir}/usr/bin
	ln -s john hccap2john
	ln -s john keepass2john
	ln -s john pdf2john
	ln -s john pwsafe2john
	ln -s john racf2john
	ln -s john rar2john
	ln -s john ssh2john
	ln -s john unafs
	ln -s john unique
	ln -s john unshadow
	ln -s john undrop
	ln -s john zip2john
}

# vim:set ts=2 sw=2 et:

